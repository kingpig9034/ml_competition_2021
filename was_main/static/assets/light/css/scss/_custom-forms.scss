//
// Override custom select, range, file, switch
//
.custom-select,
.custom-range {
  appearance: none;
  -moz-appearance: none;
  -webkit-appearance: none;
}
.custom-range {
  &::-webkit-slider-thumb {
    -webkit-appearance: none;
  }
}

// custom-file
.custom-file {
  .custom-file-label {
    &::after {
      content: "내 파일";
    }
  }
  &.label-only {
    position: relative;
    display: inline-block;
    width: auto;

    .custom-file-input {
      overflow: hidden;
      position: absolute;
      width: 1px;
      height: 1px;
      margin: -1px;
    }
    .custom-file-label {
      position: relative;
      left: auto;
      top: auto;

      &.btn-sm {
        min-width: 64px;
        height: 24px;
        padding: 0 10px;
        line-height: 23px;
        vertical-align: baseline;
      }
      &::after {
        display: none;
      }
    }
  }
}

// custom-checkbox
.custom-checkbox {
  .custom-control-input:disabled {
    &:checked ~ .custom-control-label::before {
      border-color: $custom-control-indicator-checked-disabled-bg;
      background-color: $custom-control-indicator-checked-disabled-bg;
    }
    &:indeterminate ~ .custom-control-label::before {
      border-color: $custom-control-indicator-checked-disabled-bg;
      background-color: $custom-control-indicator-checked-disabled-bg;
    }
  }
  &.icon-only {
    display: inline-block;
    width: $custom-checkbox-icon-width;
    height: $custom-checkbox-icon-height;
    min-height: auto;
    margin: 0;
    padding: 0;
    line-height: $custom-checkbox-icon-line-height;

    label {
      &:before,
      &:after {
        top: 0;
        left: 0;
      }
    }
  }
}

// custom-radio
.custom-radio {
  .custom-control-input:checked ~ .custom-control-label {
    &:before {
      background-color: $custom-radio-checked-bg-color;
      border: 1px solid $custom-radio-checked-border-color;
    }
  }
  .custom-control-input:disabled ~ .custom-control-label {
    &:before {
      border-color: $custom-radio-disabled-border-color;
    }
  }
  .custom-control-input:disabled {
    &:checked ~ .custom-control-label::before {
      background-color: $custom-control-radio-checked-disabled-bg;
    }
    &:checked ~ .custom-control-label::after {
      background-image: $custom-radio-indicator-icon-disabled;
    }
  }
  &.icon-only {
    display: inline-block;
    width: $custom-radio-icon-width;
    height: $custom-radio-icon-height;
    min-height: auto;
    margin: 0;
    padding: 0;
    line-height: $custom-radio-icon-line-height;

    label {
      &:before,
      &:after {
        top: 0;
        left: 0;
      }
    }
  }
}

// custom-switch
.custom-switch {
	padding-left: $custom-switch-before-width + $custom-control-gutter;

  .custom-control-label {
    &::before {
    	top: 0;
    	left: -($custom-switch-before-width + $custom-control-gutter);
    	width: $custom-switch-before-width;
      height: $custom-switch-before-height;
    	border: none;
    	border-radius: $custom-switch-before-radius;
      background-color: $custom-switch-indicator-bg;
    }
    &::after {
    	top: 0.0625rem;
    	left: calc(#{-($custom-switch-before-width + $custom-control-gutter)} + #{$custom-control-indicator-border-width * 1});
    	width: $custom-switch-after-width;
      height: $custom-switch-after-height;
      border-radius: $custom-switch-after-radius;
      background-color: $custom-switch-indicator-color;
    }
  }
  .custom-control-input {
  	&:checked ~ .custom-control-label {
	    &::after {
	      transform: translateX($custom-switch-before-width - $custom-switch-after-width-left);
	    }
	  }
		&:focus ~ .custom-control-label::before {
			box-shadow: 0 0 0 0.2rem rgba($custom-switch-checked-focus-shadow, 0.5);
		}
		&:focus:not(:checked) ~ .custom-control-label::before {
			border: none;
			box-shadow: 0 0 0 0.2rem rgba($custom-switch-focus-shadow, 0.5);
	  }
    &:disabled ~ .custom-control-label::before {
      border: none;
      background-color: $custom-switch-disabled-indicator-color;
    }
  }
  &.switch-only {
    padding-left: $custom-switch-before-width;

    .custom-control-label {
      &::before {
        top: 0;
        left: -($custom-switch-before-width);
      }
      &::after {
        left: calc(#{-($custom-switch-before-width)} + #{$custom-control-indicator-border-width * 1});
      }
    }
  }
}